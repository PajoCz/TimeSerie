// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeSerie.Ef;

namespace TimeSerie.Ef.Migrations
{
    [DbContext(typeof(BloggingContext))]
    partial class BloggingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028");

            modelBuilder.Entity("TimeSerie.Core.Domain.TimeSerieHeader", b =>
                {
                    b.Property<int>("TimeSerieHeaderId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("TimeSerieType");

                    b.Property<DateTimeOffset?>("ValuesFrom");

                    b.Property<DateTimeOffset?>("ValuesTo");

                    b.HasKey("TimeSerieHeaderId");

                    b.ToTable("TimeSerieHeaders");
                });

            modelBuilder.Entity("TimeSerie.Core.Domain.TimeSerieValue<decimal>", b =>
                {
                    b.Property<long>("TimeSerieValueBaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TimeSerieValueDecimalId");

                    b.Property<DateTimeOffset>("DateTimeOffset");

                    b.Property<int>("TimeSerieHeaderId");

                    b.Property<decimal>("Value");

                    b.HasKey("TimeSerieValueBaseId");

                    b.HasIndex("TimeSerieHeaderId");

                    b.ToTable("TimeSerieValueDecimal");
                });

            modelBuilder.Entity("TimeSerie.Core.Domain.TimeSerieValue<string>", b =>
                {
                    b.Property<long>("TimeSerieValueBaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TimeSerieValueStringId");

                    b.Property<DateTimeOffset>("DateTimeOffset");

                    b.Property<int>("TimeSerieHeaderId");

                    b.Property<string>("Value");

                    b.HasKey("TimeSerieValueBaseId");

                    b.HasIndex("TimeSerieHeaderId");

                    b.ToTable("TimeSerieValueString");
                });

            modelBuilder.Entity("TimeSerie.Core.Domain.TimeSerieValue<decimal>", b =>
                {
                    b.HasOne("TimeSerie.Core.Domain.TimeSerieHeader", "TimeSerieHeader")
                        .WithMany("ValueDecimals")
                        .HasForeignKey("TimeSerieHeaderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TimeSerie.Core.Domain.TimeSerieValue<string>", b =>
                {
                    b.HasOne("TimeSerie.Core.Domain.TimeSerieHeader", "TimeSerieHeader")
                        .WithMany("ValueStrings")
                        .HasForeignKey("TimeSerieHeaderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
